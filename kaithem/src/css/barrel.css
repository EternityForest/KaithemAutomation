:root {
    color-scheme: light dark;

    --black-1: #1c1c1c;
    --black-2: #343A40;
    --black-3: #545862;
    --black-4: #5C555D;

    --grey-1: #ededed;
    --grey-2: #f1f1f1;
    --grey-3: #F8F9FA;

    --red: #b92020;
    --yellow: #cea916;
    --green: rgb(0, 158, 0);
    --teal: rgb(120, 212, 219);
    --blue: rgb(95 111 161);



    /*Text color*/
    --fg: var(--black-1);
    /*Nontext items like borders*/
    --graphical-fg: var(--black-4);
    /*Headings, links, etc*/
    --accent-color: var(--blue);
    /*Main page bg*/
    --bg: var(--grey-3);
    /*.paper, items*/
    --box-bg: var(--grey-2);
    --highlight-opacity: 25%;

    /*typography*/
    --main-font: sans-serif;

    /*Spacing*/
    --padding: 6px;
    --gap: 18px;

    /*Borders*/
    --border-color: var(--graphical-fg);
    --border-radius: 0.6rem;
    --border-width: 1px;

    /*Inputs, buttons, etc*/
    --control-height: 28px;
    --control-border-radius: 12px;
    --control-border-width: 1px;

    --3d-highlight: color-mix(in srgb, var( --control-bg) 50%, rgb(255 255 255));
    --3d-shadow: color-mix(in srgb, var(--control-bg) 50%, rgb(0 0 0 / 0%));
    
    /*3D buttons are mostly transparent with just some highlights and shadows.*/
    --concave-item-bg: linear-gradient(180deg, var(--3d-shadow) 12%, var(--3d-highlight) 88%);
    --convex-item-bg: linear-gradient(180deg, var(--3d-highlight) 0%, var(--3d-shadow) 96%);
    --convex-item-active-bg: var(--concave-item-bg);
    --concave-item-box-shadow: inset 0px 0px 4px 2px #3838381f;

    /*control-bg also applies to small elements like headers*/
    --control-bg: var(--grey-1);



    /*Note that themes can decide 3D elements should be flat*/


    /*Below this line you probably don't need to change stuff*/
    /* fg color for warning and danger */
    --highlight-color: var(--teal);
    --success-color: var(--green);
    --warning-color: var(--yellow);
    --danger-color: var(--red);

    --success-fg: color-mix(in srgb, var(--success-color) 30%, var(--fg));
    --warning-fg: color-mix(in srgb, var(--warning-color) 20%, var(--fg));
    --danger-fg: color-mix(in srgb, var(--danger-color) 40%, var(--fg));

    /*Calculated helpers*/
    --thin-border: 1px solid var(--border-color);
}


@media (prefers-color-scheme: dark) {
    :root {
        --black-1: #222222;
        --black-2: #2c2c2c;
        --black-3: #4e4c4c;
        --black-4: #404040;
        --grey-1: #605f5f;
        --grey-2: #7e7e7e;
        --grey-3: #c2c2c2;
        --warning-color: #ffd943;
        --danger-color: #ff4242;
        --highlight-color: #7788aa;

        --bg: var(--black-1);
        --box-bg: var(--black-2);
        --control-bg: var(--black-4);

        --fg: var(--grey-3);
        --graphical-fg: var(--grey-1);

        --concave-item-bg: none;
        --convex-item-bg: none;
        --convex-item-active-bg: var(--grey-1);
        --concave-item-box-shadow: none;
    }
}



/*****************Typography****************************/

@media screen and (max-width: 820px) {
    .desktop-only {
        display: none;
    }
}

/*Overall page layout */

main {
    margin: auto;
}

main {
    width: min(45em, 100vw);
}

html {
    background: var(--bg);
    /*This might not all be needed on new browsers*/
    background-size: cover, unset;
    background-repeat: repeat, repeat;
    min-height: 100vh;
    padding: 0px;
    margin: 0px;
    box-sizing: border-box;
}

body {
    font-family: Lato;
    line-height: 1.6;
    font-size: 18px;
    margin: 0px;
    color: var(--fg);
}



/*Stack labels on the form elements*/
label>:is(input, select, button, div) {
    display: block;
}

label:has(*) {
    display: inline-block;
}

label {
    min-width: max-content;
    padding-inline-start: var(--padding);
    padding-inline-end: var(--padding);
    /*If it ever is a flex, keep the inputs near the side*/
    place-content: space-between;
}


/********************Behavior****************************/
body {
    /* Disables pull-to-refresh but allows overscroll glow effects. */
    overscroll-behavior-y: contain;
}

/********************Basic Layout******************************/

/*Headings and lines */

h1,
h2,
h3,
h4,
h5,
h6,
h1 *,
h2 *,
h3 * {
    color: var(--accent-color);
}

h3 button,
h3 a.button {
    font-size: 100%;
    font-family: var(--main-font);
}

h1,
h2,
h3 {
    font-family: var(--main-font);
    margin-bottom: 12px;
    margin-top: 28px;
    text-align: center;
}

h2 {
    margin-top: 32px;
}



h2:first-of-type,
h3:first-of-type {
    margin-top: 0px;
}

hr {
    background-color: transparent;
    border: none;
    border-top: var(--border-width) solid var(--border-color);
    height: var(--border-width);
}


/*Headers and footers */
header {
    border-radius: 0px 0px inherit inherit;
}

header {
    border-radius: inherit inherit 0px 0px;
}


header,
footer {
    background-color: var(--control-bg);
    width: 100%;
    padding: 0px;
    box-sizing: border-box;
    margin: 0px;
    flex-grow: 0;
}


header *,
footer * {
    --control-bg: var(--box-bg);
}


header {
    border-bottom: var(--border-width) solid var(--border-color);
}

header>*:only-child {
    width: 100%;
    box-sizing: border-box;
    padding: 6px;
    margin: 0px;
}

header>:is(h1,h2,h3,h4):has(button){
    padding: 0px;
}

header:not(.undecorated)> * > :only-child{
    border: none;
}

header:not(.undecorated)>.tool-bar:only-child *:not(.specificity-hack) {
    margin: var(--padding);
    border-radius: var(--control-border-radius);
}

header:not(.undecorated)>.tool-bar:only-child :is(p, h1,h2,h3,h4,h5,h6,label) {
    background: none;
}

header:not(.undecorated)>.tool-bar:only-child :is(input, select, button) {
    background: var(--control-bg);
    box-shadow: none;
}

header:not(.undecorated)>.tool-bar:only-child :is(input, button) {
    background: var(--control-bg);
}

footer {
    border-top: var(--border-width) solid var(--border-color);
}



/*Inputs*/

input[type=checkbox] {
    min-width: 2em;
}


dialog {
    position: fixed;
    top: 50%;
    bottom: 50%;
    border: 3px solid;
    border-color: var(--border-color);
    z-index: 1000;
}

span,
button,
input,
textarea,
select {
    color: inherit;
}


textarea:disabled {
    background-color: color-mix(in srgb, var(--control-bg) 50%, var(--bg) 50%);
}

details {
    margin: 0.4em;
    border: var(--border-width) solid var(--border-color);
    padding-left: 0.4em;
    border-radius: var(--border-radius);
}

details.help {
    border: var(--border-width) dotted;
}


td details {
    display: inline-block;
}

/*A link styled to look like a button*/
a.button {
    text-decoration: none;
    border: var(--control-border-width) solid var(--border-color);
    color: var(--fg);
    padding: 0em 0.2em 0em 0.2em;
    display: inline-block;
}

button {
    border-style: solid;
}

/*A button link while being clicked*/

button:active,
a:active {
    background: var(--convex-item-active-bg) !important;
    box-shadow: var(--concave-item-box-shadow) !important;
}

summary h2:first-child {
    display: inline;
}

/*****************************General***********************************************************************************/

/**Basic styling**/
iframe {
    border-style: solid;
    border-width: var(--border-width);
}

/*Tables*/

table,
tr,
td,
th,
thead {
    border-color: var(--border-color);
}

table {
    border-style: solid;
    border-width: var(--border-width);
    border-color: var(--border-color);
    border-collapse: collapse;
    margin: 0.4em;
}

/*This makes tables easier to read by coloring alternate rows differently.*/
table tr:nth-child(odd) td {
    background-color: rgba(255, 255, 255, 0.05);
}

table tr:nth-child(even) td {
    background-color: rgba(0, 0, 0, 0.05);
}

table {
    border-collapse: separate;
    border-spacing: 0;
    border-radius: var(--border-radius);
    ;
    border: none;
}

tbody {
    border-radius: var(--border-radius);
    ;
}


td input,
td select {
    border: var(--border-width) solid var(--border-color);
    box-sizing: border-box;
    margin: 0px;
    height: 1.8em;
    width: auto;
}


td {
    padding: var(--border-width);
    width: max-content;
}

th {
    width: max-content;
}

table tr th,
table tr td {
    border-right: var(--border-width) solid var(--border-color);
    border-bottom: var(--border-width) solid var(--border-color);
    padding: var(--padding);
}

table tr th:first-child,
table tr td:first-child {
    border-left: var(--border-width) solid var(--border-color);
}

table tr th,
table tr:first-child td {
    border-top: var(--border-width) solid var(--border-color);
    text-align: left;
}


/* top-left border-radius */

:is(table, thead:first-child, tbody:first-child):first-child>tr:first-child :first-child:is(td, th) {
    border-top-left-radius: var(--border-radius);
    ;
}


/* top-right border-radius */

:is(table, thead:first-child, tbody:first-child)>tr:first-child :last-child:is(td, th) {
    border-top-right-radius: var(--border-radius);
    ;
}


/* bottom-left border-radius */

:is(table, tbody)>tr:last-child :first-child:is(td, th) {
    border-bottom-left-radius: var(--border-radius);
    ;
}


/* bottom-right border-radius */

:is(table, tbody)>tr:last-child :last-child:is(td, th) {
    border-bottom-right-radius: var(--border-radius);
    ;
}




/* Components */

.decorative-image {
    display: none;
}


.card {
    border-style: solid;
    border-width: var(--border-width);
    border-radius: var(--border-radius);
    margin-left: auto;
    margin-right: auto;
    margin-top: 0.8em;
    margin-bottom: 0.2em;
    box-sizing: border-box;
    overflow-x: auto;
    flex-basis: fit-content;
    flex-grow: 0.1;

    border-color: var(--border-color);
}

/*This handles the old style "section box", but also top level HTML section elements. It's basicattly for independant sections of content.*/
.window {
    background: var(--box-bg);
    border-style: solid;
    border-width: var(--border-width);
    margin-top: 0.8em;
    margin-bottom: 0.2em;
    min-width: min-content;
    box-sizing: border-box;
    max-width: 99%;
    overflow: auto;
    border-radius: var(--border-radius);
    border-color: var(--border-color);
    text-align: left;
    flex-grow: 1;
    flex-basis: min-content;
    resize: both;
}



/*Flex rows and cols */
.max-content {
    width: max-content;
    height: min-content;
    flex-basis: max-content;
}

.min-content {
    width: min-content;
    height: min-content;
    flex-basis: min-content;
}


.flex-cols {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
}

.flex-cols>* {
    box-sizing: border-box;
    flex: 1 1 auto;
    flex-basis: fit-content;
}

.flex-cols footer,
.flex-cols header {
    flex-grow: 0;
}

.flex-rows {
    display: flex;
    flex-wrap: wrap;
    flex-direction: row;
    gap: var(--gap);
    align-items: stretch;
    justify-content: space-between;
}


.flex-rows>* {
    box-sizing: border-box;
    flex-grow: 1;
    flex-shrink: 1;
    flex-basis: fit-content;
    margin: 0px;
}

/*Grid and sizing*/

.col-1,
.col-2,
.col-3,
.col-4,
.col-5,
.col-6,
.col-7,
.col-8,
.col-9,
.col-10,
.col-11,
.col-12 {
    flex-grow: 1;
    flex-basis: unset;
    min-width: fit-content;
}

.col-1 {
    width: 4.33%;
}

.col-2 {
    width: 12.66%;
}

.col-3 {
    width: 21%;
}

.col-4 {
    width: 29.33%;
}

.col-5 {
    width: 37.66%;
}

.col-6 {
    width: 46%;
}

.col-7 {
    width: 54.33%;
}

.col-8 {
    width: 62.66%;
}

.col-9 {
    width: 71%;
}

.col-10 {
    width: 79.33%;
}

.col-11 {
    width: 87.66%;
}

.col-12 {
    width: 96%;
}



.nogaps>.col-1 {
    width: 8.3333%;
}

.nogaps>.col-2 {
    width: 16.6666;
}

.nogaps>.col-3 {
    width: 25%;
}

.nogaps>.col-4 {
    width: 33.33333%;
}

.nogaps>.col-5 {
    width: 41.6666%;
}

.nogaps>.col-6 {
    width: 50%;
}

.nogaps>.col-7 {
    width: 58.333%;
}

.nogaps>.col-8 {
    width: 66.66%;
}

.nogaps>.col-9 {
    width: 75%;
}

.nogaps>.col-10 {
    width: 83.33%;
}

.nogaps>.col-11 {
    width: 91.66%;
}

.nogaps>.col-12 {
    width: 100%;
}

/*Sizes that are relative to approximately the width of a phone screem*/
.w-sm-full {
    width: 480px;
    max-width: calc(min(480px, 96vw));
    flex-basis: 480px;
    flex-shrink: 1;
}

.w-sm-quarter {
    width: 120px;
    max-width: calc(min(120px, 21vw));
    flex-basis: 120px;
}

.w-sm-half {
    width: 240px;
    max-width: calc(min(240px, 46vw));
    flex-basis: 240px;
}

.w-sm-double {
    width: 16cm;
    max-width: calc(min(28cm, 96vw));
    flex-basis: 16cm;
    flex-shrink: 1;
    flex-grow: 1;
}

.w-full {
    width: 100%;
    box-sizing: border-box;
    flex-basis: 100%;
}

.h-full {
    height: 100vh
}

.h-half {
    height: 46vh;
}

.h-quarter {
    height: 22vh;
}

.scroll {
    overflow: auto;
}

.max-h-1rem {
    max-height: 1rem;
}

.max-h-2rem {
    max-height: 2rem;
}

.max-h-4rem {
    max-height: 4rem;
}

.max-h-6rem {
    max-height: 6rem;
}

.max-h-12rem {
    max-height: 12rem;
}

.max-h-24rem {
    max-height: 24rem;
}

.max-h-36rem {
    max-height: 36rem;
}

.max-h-48rem {
    max-height: 48rem;
}

-max-h-60rem {
    max-height: 60rem;
}



.min-h-1rem {
    min-height: 1rem;
}

.min-h-2rem {
    min-height: 2rem;
}

.min-h-4rem {
    min-height: 4rem;
}

.min-h-6rem {
    min-height: 6rem;
}

.min-h-12rem {
    min-height: 12rem;
}

.min-h-24rem {
    min-height: 24rem;
}

.h-1rem {
    height: 1rem;
}

.h-2rem {
    height: 2rem;
}

.h-4rem {
    height: 4rem;
}

.h-6rem {
    height: 6rem;
}

.h-12rem {
    height: 12rem;
}

.h-24rem {
    height: 24rem;
}

.h-36rem {
    height: 36rem;
}

.h-48rem {
    height: 48rem;
}

.h-60rem {
    height: 60rem;
}

.flex-cols>.h-1rem {
    flex-basis: 1rem;
}

.flex-cols>.h-2rem {
    flex-basis: 2rem;
}

.flex-cols>.h-4rem {
    flex-basis: 4rem;
}

.flex-cols>.h-6rem {
    flex-basis: 6rem;
}

.flex-cols>.h-12rem {
    flex-basis: 12rem;
}

.flex-cols>.h-24rem {
    flex-basis: 24rem;
}

.flex-cols>.h-36rem {
    flex-basis: 36rem;
}

.flex-cols>.h-48rem {
    flex-basis: 48rem;
}

.flex-cols>.h-60rem {
    flex-basis: 60rem;
}

/*Simple utilities */

.paper {
    background: var(--box-bg);
}

.v-center {
    margin-top: auto;
    margin-bottom: auto;
}

.h-center {
    margin-left: auto;
    margin-right: auto;
}

img.h-center,
iframe.h-center {
    display: block;
}

.undecorated {
    border: none !important;
    box-shadow: none !important;
    background: transparent !important;
    backdrop-filter: none !important;
}


.nogaps {
    gap: 0px;
}

.nogaps>* {
    margin: 0px;
    box-sizing: border-box;
}

.rounded {
    border-radius: var(--border-radius);
}

.padding {
    padding: var(--padding);
}

.font-normal {
    font-style: normal;
}

.nopadding {
    padding: 0px;
}

.nogrow {
    flex-grow: 0 !important;
}

.noshrink {
    flex-grow: 0;
}

.grow {
    flex-grow: 1;
}

.margin {
    margin: var(--gap);
}

.nomargin {
    margin: 0px;
}

.block {
    display: block;
}

.inline {
    display: inline;
}

.inline.block,
.inline-block {
    display: inline-block;
}

.inline-flex,
.flex-rows.inline,
.flex-cols.inline,
.tool-bar.inline {
    display: inline-flex;
}



.align-left {
    text-align: left;
    justify-content: left;
}

.align-right {
    text-align: right;
    justify-content: right;
}

.align-center {
    text-align: center;
    justify-content: center;
}

.float-left {
    float: left;
}

.float-right {
    float: right;
}

.left {
    margin-left: 0px;
    margin-right: auto;
}

.right {
    margin-left: auto;
    margin-right: 0px;
}

/*Overrides to not break the margin class*/
.left.margin {
    margin-left: var(--padding);
}

.right.margin {
    margin-right: var(--padding);
}

/*Colorways*/

/*danger is the canonical*/

.error,
.danger,
.bad {
    --fg: var(--danger-fg);
    --graphical-fg: var(--danger-fg);
    background-color: color-mix(in srgb, var(--danger-color) var(--highlight-opacity), transparent)
}

.warning,
.warn {
    --fg: var(--warning-fg);
    --graphical-fg: var(--warning-fg);
    background-color: color-mix(in srgb, var(--warning-color) var(--highlight-opacity), transparent)
}

.highlight {
    background-color: color-mix(in srgb, var(--highlight-color) var(--highlight-opacity), transparent)
}

.success {
    --fg: var(--success-fg);
    --graphical-fg: var(--success-fg);
    background-color: color-mix(in srgb, var(--success-color) var(--highlight-opacity), transparent)
}

.error.paper {
    background-color: color-mix(in srgb, var(--error-color) 25%, var(--box-bg))
}

.warning.paper {
    background-color: color-mix(in srgb, var(--warning-color) 25%, var(--box-bg))
}

.highlight.paper {
    background-color: color-mix(in srgb, var(--highlight-color) 35%, var(--box-bg))
}

.success.paper {
    background-color: color-mix(in srgb, var(--success-color) 35%, var(--box-bg))
}


/*Classless styles */

blockquote {
    white-space: pre-wrap;
    border-left: 3px solid var(--graphical-fg);
    font-style: italic;
    border-color: var(--border-color);
    margin-inline-start: 8px;
    margin-inline-end: 4px;
    margin: 6px;
    padding: 4px;
    color: var(--graphical-fg);
}

a {
    text-decoration-style: dotted;
    text-decoration-thickness: 1.2px;
    color: color-mix(in srgb, var(--accent-color) 50%, var(--fg));
}



button,
a.button,
input,
select {
    min-height: var(--control-height);
    box-sizing: border-box;
}

button,
a.button,
input[type='submit'] {
    background: var(--convex-item-bg);
}

input:not([type='submit']):not([type='range']),
select {
    background: var(--concave-item-bg);
    box-shadow: var(--concave-item-box-shadow);
}

select{
    padding: 4px;
}

button,
a.button,
a,
label,
select,
textarea {
    border-radius: var(--control-border-width);
    border-color: var(--border-color);
}

textarea {
    box-shadow: var(--concave-item-box-shadow);
}


button,
a.button,
label,
a,
select {
    font-family: inherit;
}

/* Color elements */

textarea {
    background-color: var(--control-bg);
}

button,
a.button,
input,
textarea,
select {
    border-radius: var(--control-border-radius);
}

/*Border radius looks bad if it's smashed right up close to containing box and not the same radius*/
header>* {
    border-radius: var(--border-radius);
}

button,
input,
textarea,
select,
p,
div {
    border-color: var(--border-color);
}

button:hover,
a.button:hover,
a.hover,
button:hover *,
a:hover * {
    color: var(--accent-color);
    --fg: var(--accent-color);
}


dd {
    margin-bottom: 1.5em;
}

/******************The tool bar *************************/
/*This class very much needs some refactoring */
.multibar {
    flex-basis: content;
    flex-grow: 5;
    flex-direction: row;
    display: flex;
    height: fit-content;
    flex-basis: max-content;
    flex-wrap: wrap;
}

.tool-bar {
    --tool-bar-element-border: var(--control-border-width) solid var(--border-color);
    flex-basis: max-content;
    display: flex;
    flex-wrap: wrap;
    align-items: stretch;
    border-radius: var(--control-border-radius);
    min-height: var(--control-height);
    margin: 0.6em;
    flex-grow: 1;
    vertical-align: middle;
    height: fit-content;
    align-items: center;
    align-content: center;
    width: auto;
    box-sizing: border-box;
    background-clip: content-box;
}


.tool-bar {
    gap: 0px;
}

.tool-bar * {
    box-shadow: none;
    display: inline-block;
}

.tool-bar form {
    display: inline-block;
}

.multibar .tool-bar {
    width: unset;
}

.tool-bar img {
    display: inline;
}

.tool-bar a {
    display: block;
    text-align: center;
}

.tool-bar label {
    display: flex;
    flex-grow: 50;
    border: 0px;
    text-align: right;
}

.tool-bar>*,
.tool-bar>input,
.tool-bar>a {
    box-sizing: border-box;
    font-size: inherit;
    height: var(--control-height);
}

.tool-bar>label>:is(input, select){
    border: none;
}
.tool-bar :is(a, a.button, select, input, meter, button) {
    margin: 0px;
    align-items: stretch;
    border-radius: 0px;
    flex-shrink: 1;
    border-radius: 0px;
    flex-basis: fit-content;
}



.tool-bar :only-child {
    flex-grow: 1;
}



.tool-bar form {
    border: 0px !important;
    margin: 0px !important;
    padding: 0px !important;
    flex-grow: 50;
    border: 0px !important;
    display: flex;
    flex-basis: fit-content;
}

.tool-bar form :is(button, input[type=button], select) {
    flex-grow: 1;
}

.tool-bar :is(h1, h2, h3, h4, h5, h6) * {
    border: none;
}


.tool-bar> :is(h1, h2, h3, h4, h5, h6)>* {
    margin: 0px;
    padding: 0px;
}


.tool-bar :is(h1, h2, h3, h4, h5, h6, label) {
    margin: 0px;
    padding-top: 0px;
    padding-bottom: 0px;
    vertical-align: middle;
    text-align: center;
    display: flex;
    flex-grow: 0.5;
    min-width: fit-content;
}

.tool-bar p {
    padding-left: var(--padding);
    min-width: fit-content;
    flex-grow: 0.5;
    margin: 0px;
}



/*P is not growable */

.tool-bar :is(meter, a, a.button, button) {
    width: fit-content;
    flex-grow: 1;
}


/*Most likely to make good use of the extra space*/

.tool-bar input:not([type="submit"]),
.tool-bar select {
    flex-grow: 50;
}

.tool-bar select,
.tool-bar button,
.tool-bar a,
.tool-bar p,
.tool-bar div,
.tool-bar h1,

.tool-bar h2,
.tool-bar h3,
.tool-bar h4,
.tool-bar h5,
.tool-bar label,
.tool-bar meter,
.tool-bar input[type=submit] {
    background: var(--convex-item-bg);
}

.tool-bar meter {
    min-height: 100%;
}

.tool-bar :is(p, h1, h2, h3, h4, h5, h6, label) {
    vertical-align: middle;
    display: flex;
}




/*Exception: the first item always growable so it can be the title*/


.tool-bar>label> :is(input, select, meter):not(.specificity-hack) {
    margin: 0px var(--padding) 0px var(--padding);
    min-height: 100%;
}

.tool-bar :is(h1, h2, h3, h4, h5, h6):first-child {
    flex-grow: 50;
}

/*:not(i) is for icons*/
.tool-bar> :is(a, a.button, select, p, h1, h2, h3, h4, h5, h6, label, input, meter, button, .input-group-prepend):first-child,
.tool-bar :is(a, a.button, select, p, h1, h2, h3, h4, h5, h6, input, meter, button, form, .input-group-prepend):first-child :first-child:not(i) {
    border-radius: var(--control-border-radius) 0px 0px var(--control-border-radius);
    margin-inline-start: 0px;

}

.tool-bar> :is(a, a.button, select, p, h1, h2, h3, h4, h5, h6, label, input, meter, button, .input-group-append):last-child,
.tool-bar :is(a, a.button, select, p, h1, h2, h3, h4, h5, h6, label, meter, button, form, .input-group-append):last-child :last-child:not(i) {
    border-radius: 0px var(--control-border-radius) var(--control-border-radius) 0px;
    margin-inline-end: 0px;
}

.tool-bar > label:last-child{
    padding-inline-end: 0px;
}
.tool-bar > label:first-child{
    padding-inline-start: 0px;
}
.tool-bar> :is(a, a.button, select, p, h1, h2, h3, h4, h5, h6, label, input, meter, button, .input-group-append):first-child:last-child {
    border-radius: var(--control-border-radius) var(--control-border-radius) var(--control-border-radius) var(--control-border-radius);
}

.tool-bar meter::-webkit-meter-inner-element {
    -webkit-appearance: inherit;
    box-sizing: inherit;
    border: var(--control-border-width) solid var(--border-color);
    height: 22px;
}

.tool-bar>form {
    border: none !important;
    border-radius: var(--control-border-radius);
}


/*The boder puts an ugly white line on the meter*/

.tool-bar>*:not(meter),
.tool-bar>form>*:not(meter) {
    border: var(--tool-bar-element-border);
}


.tool-bar>input:not([type="submit"]) {
    border: var(--tool-bar-element-border);
}





.tool-bar>label {
    display: inline-flex;
    border-top: var(--tool-bar-element-border);
    border-bottom: var(--tool-bar-element-border);
    align-items: center;
}

.tool-bar select {
    background: none;
}

/*Scrollbars*/
/* Firefox */
* {
    scrollbar-width: auto;
    scrollbar-color: var(--graphical-fg) var(--control-bg);
}

/* Other browsers */
*::-webkit-scrollbar {
    width: 14px;
}

*::-webkit-scrollbar-track {
    background: var(--control-bg);
    border-radius: var(--border-radius);
}

*::-webkit-scrollbar-thumb {
    background-color: var(--graphical-fg);
    border-radius: var(--border-radius);
    border: none;
}

/* The Range inputs */


/****/
input[type=range] {
    -webkit-appearance: none;
    background-color: transparent;
}


input[type=range]::-webkit-slider-runnable-track {
    background: var(--control-bg);
    border: var(--thin-border);
    border-radius: 250px;
    height: calc(var(--control-height) / 3);
}

input[type=range]::-webkit-slider-thumb {
    margin-top: -7.8px;
    width: calc(var(--control-height) / 1.6);
    height: calc(var(--control-height) / 1.2);
    background: var(--graphical-fg);
    border: var(--thin-border);
    border-radius: 100px;
    -webkit-appearance: none;
}

input[type=range]::-moz-range-track {
    background: var(--control-bg);
    border: var(--thin-border);
    border-radius: 250px;
    height: calc(var(--control-height) / 3);
}

input[type=range]::-moz-range-thumb {
    width: calc(var(--control-height) / 1.6);
    height: calc(var(--control-height) / 1.2);
    background: var(--graphical-fg);
    border: var(--thin-border);
    border-radius: 100px;
}

/*Meter element */


progress {
    height: var(--control-height);

    /* For Firefox */
    background: var(--control-bg);
    box-shadow: var(--concave-item-box-shadow);
    border-radius: var(--control-border-radius);
}

progress::-webkit-progress-bar {
    background: var(--control-bg);
    box-shadow: var(--concave-item-box-shadow);
    border-radius: var(--control-border-radius);
}

progress::-webkit-progress-value {
    background-color: var(--highlight-color);
    border-radius: var(--control-border-radius);
}

progress::-moz-progress-bar {
    background-color: var(--highlight-color);
    border-radius: var(--control-border-radius);
}




meter {
    height: var(--control-height);

    /* For Firefox */
    border-radius: var(--control-border-radius);
    border-color: var(--border-color);
}

/* WebKit */
meter::-webkit-meter-bar {
    border-color: var(--border-color);
    background: var(--control-bg);
    box-shadow: var(--concave-item-box-shadow);
    border-radius: var(--control-border-radius);
}

meter::-webkit-meter-optimum-value,
meter::-webkit-meter-suboptimum-value,
meter::-webkit-meter-even-less-good-value {
    border-radius: var(--control-border-radius);
}

meter::-webkit-meter-optimum-value {
    background: var(--success-color);
}

meter::-webkit-meter-suboptimum-value {
    background: var(--warning-color);
}

meter::-webkit-meter-even-less-good-value {
    background: var(--danger-color);
}


/* Firefox */
meter::-moz-meter-bar {
    border-radius: var(--control-border-radius);
}

meter:-moz-meter-optimum::-moz-meter-bar {
    background: var(--success-color);
}

meter:-moz-meter-sub-optimum::-moz-meter-bar {
    background: var(--warning-color);
}

meter:-moz-meter-sub-sub-optimum::-moz-meter-bar {
    background: var(--danger-color);
}