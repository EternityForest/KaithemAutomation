{continual: false, enable: true, once: true, priority: interactive, rate-limit: 0.0,
  resource-type: event, trigger: 'True'}

#End metadata. Format: metadata, setup, action, delimited by --- on it's own line.
---
#This code runs once when the event loads. It also runs when you save the event during the test compile
#and may run multiple times when kaithem boots due to dependancy resolution
__doc__=''
import time
class CurrentTimeVirtualResource(kaithem.resource.VirtualResource):
    def __html_repr__(self):
        return '''
        This is a Virtual Resource. It never gets saved to disk and is created in code.</br>
        The __html_repr__ function of it says: Page Loaded at '''+str(time.time())
---
module.vr2 = CurrentTimeVirtualResource()

module['Page Load Time'] = module.vr2


module.vr = kaithem.resource.VirtualResource()

module['VirtualResource'] = module.vr

module.vr.blah = 42

if not module['VirtualResource'].blah==42:
    raise RuntimeError("Something went wrong")

class TestError(RuntimeError):
    pass
try:
    module['Page Load Time'] = kaithem.resource.VirtualResource()
    raise TestError("Should not have been able to replace with anything but instance of the same thing")
except RuntimeError:
    pass
