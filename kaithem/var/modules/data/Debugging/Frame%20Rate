continual: false
disabled: false
enable: true
once: true
priority: !!python/unicode 'realtime'
rate-limit: 0.0
resource-type: event
trigger: !!python/unicode '!onchange kaithem.time.second()'
versions:
  action: "if time.time()-last>1.2:\r\n    kaithem.messagebus.post(\"/system/notifications/errors\"\
    , \"Frame rate dropped, onchange second fired more than 1s since last\")"
  continual: false
  priority: interactive
  rate-limit: 0.0
  resource-type: event
  setup: "#This code runs once when the event loads. It also runs when you save the\
    \ event during the test compile\r\n#and may run multiple times when kaithem boots\
    \ due to dependancy resolution\r\n__doc__=\"Raises an error if it detects kaithem's\
    \ response time is too slow to an onchange event\"\r\nlast = time.time()"
  trigger: '!onchange kaithem.time.second()'

#End metadata. Format: metadata, setup, action, delimited by --- on it's own line.
---
#This code runs once when the event loads. It also runs when you save the event during the test compile
#and may run multiple times when kaithem boots due to dependancy resolution
__doc__="Raises an error if it detects kaithem's response time is too slow to an onchange event"
import time
last = time.time()
---
global last
if time.time()-last>1.2:
    kaithem.message.post("/system/notifications/errors", "Frame rate dropped, onchange second fired more than 1s since last")
last = time.time()