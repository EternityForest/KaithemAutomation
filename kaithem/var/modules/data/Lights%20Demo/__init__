continual: true
enable: true
once: true
priority: interactive
rate-limit: 0.0
resource-type: event
trigger: 'True'
versions:
  __draft__:
    action: pass
    continual: true
    enable: true
    once: true
    priority: interactive
    rate-limit: 0.0
    resource-type: event
    setup: "#This code runs once when the event loads. It also runs when you save\
      \ the event during the test compile\r\n#and may run multiple times when kaithem\
      \ boots due to dependancy resolution\r\n__doc__=''\r\n\r\nmodule.link = kaithem.widget.APIWidget()\r\
      \n\r\nclass u(kaithem.lights.Universe):\r\n    def onFrame(self):\r\n      \
      \  module.link.send([int(i) for i in self.values[1:4]])\r\n\r\nf = kaithem.lights.fixture(\"\
      DemoFixture\",[['red','red'],['green','green'],['blue','blue']])\r\nf.assign('TestUniverse',\
      \ 1)\r\nmodule.universe = u(\"TestUniverse\",5)"
    trigger: 'True'

#End metadata. Format: metadata, setup, action, delimited by --- on it's own line.
---
#This code runs once when the event loads. It also runs when you save the event during the test compile
#and may run multiple times when kaithem boots due to dependancy resolution
__doc__=''

module.link = kaithem.widget.APIWidget()

class u(kaithem.lights.Universe):
    def onFrame(self):
        module.link.send([int(i) for i in self.values[1:4]])

f = kaithem.lights.fixture("DemoFixture",[('red','red'),('green','green'),('blue','blue')])
f.assign('TestUniverse', 1)
module.universe = u("TestUniverse",5)
---
pass