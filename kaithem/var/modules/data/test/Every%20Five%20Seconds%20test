continual: false
disabled: false
enable: true
once: true
priority: interactive
rate-limit: 0.0
resource-type: event
trigger: '!time every five seconds'
versions:
  action: "global last, posted\r\nif last:\r\n    if not 4.5>time.time()-last<5.5:\r\
    \n        if posted:\r\n        \tmessagebus.postMessage(\"system/notifications/errors\"\
    ,\"Event that was supposed to ran every 5 seconds was more than 5 seconds off\"\
    )\r\n            posted=True\r\nlast = time.time()\r\n "
  continual: false
  priority: interactive
  rate-limit: 0.0
  resource-type: event
  setup: "#This code runs once when the event loads. It also runs when you save the\
    \ event during the test compile\r\n#and may run multiple times when kaithem boots\
    \ due to dependancy resolution\r\n__doc__='Test that event scheduled for every\
    \ five seconds runs at correct fre'\r\nimport time\r\nlast = 0\r\nposted = False\r\
    \n"
  trigger: '!time every five seconds'

#End metadata. Format: metadata, setup, action, delimited by --- on it's own line.
---
#This code runs once when the event loads. It also runs when you save the event during the test compile
#and may run multiple times when kaithem boots due to dependancy resolution
__doc__='Test that event scheduled for every five seconds runs at correct frequency'
import time
last = 0
posted = False

---
global last, posted
if last:
	if not 4.5>time.time()-last<5.5:
		if posted:
			messagebus.postMessage("system/notifications/errors","Event that was supposed to ran every 5 seconds was more than 5 seconds off")
			posted=True
last = time.time()
 