continual: false
enable: true
once: true
priority: interactive
rate-limit: 0.0
resource-type: event
trigger: 'False'
versions:
  __draft__:
    action: pass
    continual: false
    enable: true
    once: true
    priority: interactive
    rate-limit: 0.0
    resource-type: event
    setup: "#This code runs once when the event loads. It also runs when you save\
      \ the event during the test compile\r\n#and may run multiple times when kaithem\
      \ boots due to dependancy resolution\r\n__doc__=''\r\ndef fail(t):\r\n    raise\
      \ RuntimeError(t)\r\n    \r\nfrom src import config, modules\r\nimport requests\r\
      \n\r\naddr = \"http://localhost:\"+str(config.config[\"http-port\"])+\"/\"\r\
      \nsaddr = \"https://localhost:\"+str(config.config[\"https-port\"])+\"/\"\r\n\
      \r\n#Should fail because security\r\nr= requests.get(addr+\"modules/upload\"\
      )\r\nprint(\"Get module upload interface page, http, no security token\")\r\n\
      print(r.status_code)\r\nif not r.status_code==426:\r\n    fail(\"Unencrypted\
      \ access allowed to module upload interface page\")\r\n    \r\n#Should fail\
      \ because security\r\nr= requests.get(saddr+\"modules/upload\",verify=False)\r\
      \nprint(\"Get module upload interface page, https, no security token\")\r\n\
      if not \"Please Log In\" in r.text:\r\n    fail(\"access allowed to module upload\
      \ interface page with no token\")\r\n    \r\n#Should fail because security\r\
      \nr= requests.get(addr+\"modules/uploadtarget\", data={'modulesfile':None})\r\
      \nprint(\"Get module upload interface page, http, no security token\")\r\nprint(r.status_code)\r\
      \nif not r.status_code==426:\r\n    print(r.text)\r\n    fail(\"Unencrypted\
      \ access allowed to module upload target page\")\r\n    \r\n#Should fail because\
      \ security\r\nr= requests.get(saddr+\"modules/uploadtarget\",verify=False, data={'modulesfile':None})\r\
      \nprint(\"Get module upload interface page, https, no security token\")\r\n\
      if not \"Please Log In\" in r.text:\r\n    print(r.text)\r\n    fail(\"access\
      \ allowed to module upload target page with no token\")"
    trigger: 'False'

#End metadata. Format: metadata, setup, action, delimited by --- on it's own line.
---
#This code runs once when the event loads. It also runs when you save the event during the test compile
#and may run multiple times when kaithem boots due to dependancy resolution
__doc__=''
def fail(t):
    raise RuntimeError(t)
    
from src import config, modules
import requests

addr = "http://localhost:"+str(config.config["http-port"])+"/"
saddr = "https://localhost:"+str(config.config["https-port"])+"/"

#Should fail because security
r= requests.get(addr+"modules/upload")
print("Get module upload interface page, http, no security token")
print(r.status_code)
if not r.status_code==426:
    fail("Unencrypted access allowed to module upload interface page")
    
#Should fail because security
r= requests.get(saddr+"modules/upload",verify=False)
print("Get module upload interface page, https, no security token")
if not "Please Log In" in r.text:
    fail("access allowed to module upload interface page with no token")
---
pass