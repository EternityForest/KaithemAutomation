{continual: true, enable: true, once: true, priority: interactive, rate-limit: 0.0,
  resource-type: event, trigger: 'True'}

#End metadata. Format: metadata, setup, action, delimited by --- on it's own line.
---
#This code runs once when the event loads. It also runs when you save the event during the test compile
#and may run multiple times when kaithem boots due to dependancy resolution
__doc__='''This depends on fairly tight timing. One or two errors here every ten minutes or so is not an issue considering the amount of load and 
lock contention the test module can create.'''
import time

depend = module.uselessmachine
---
module['UselessMachine'].start()
time.sleep(1)
module.uselessmachine =  time.time()
time.sleep(0.3)
if module.uselessmachine:
    raise RuntimeError("Useless machine didn't work")

module['UselessMachine'].stop()
time.sleep(1)

module.uselessmachine =  time.time()
time.sleep(2)
if not module.uselessmachine:
    raise RuntimeError("Useless machine didn't turn off")


module['UselessMachine'].start()
time.sleep(1)
module.uselessmachine =  time.time()
time.sleep(0.3)
if module.uselessmachine:
    raise RuntimeError("Useless machine didn't turn back on")
print("success")
